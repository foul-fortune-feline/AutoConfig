plugins {
    id("java")
    id("idea")
    id("maven-publish")
    id("signing")
    id("fabric-loom") version("0.11-SNAPSHOT")
    id("com.github.johnrengelman.shadow") version("7.0.0")
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url "https://maven.shedaniel.me/" }
}

version = modVersion
group = modMavenGroup
archivesBaseName = modJarBaseName

loom {
}

dependencies {
    minecraft("com.mojang:minecraft:$minecraft_version")
    mappings("net.fabricmc:yarn:$yarn_mappings:v2")
    modImplementation("net.fabricmc:fabric-loader:$loader_version")
    dependModule("fabric-api-base", fabric_version)
    dependModule("fabric-resource-loader-v0", fabric_version, false)

    modCompileOnly("me.shedaniel.cloth:cloth-config-fabric:6.2.57") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modCompileOnly("com.terraformersmc:modmenu:3.0.1") {
        transitive = false
    }
    modLocalRuntime("com.terraformersmc:modmenu:3.0.1") {
        transitive = false
    }

    shadow("blue.endless:jankson:1.1.+")
    implementation("blue.endless:jankson:1.1.+")

    shadow("com.moandjiezana.toml:toml4j:0.7.+") {
        exclude(group: "com.google.code.gson", module: "gson")
    }
    implementation("com.moandjiezana.toml:toml4j:0.7.+")
}

java.withSourcesJar()

def dependModule(moduleName, fapiVersion, include = true) {
    depend("net.fabricmc.fabric-api:$moduleName:${fabricApi.moduleVersion(moduleName, fapiVersion)}", include)
}

def depend(str, include = true) {
    dependencies.modLocalRuntime(str) {
        exclude(module: "fabric-biomes-v1")
    }
    dependencies.modCompileOnly(str) {
        exclude(module: "fabric-biomes-v1")
    }
    if (include)
        dependencies.include(str)
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

shadowJar {
    relocate("blue.endless.jankson", "${basePackage}.shadowed.blue.endless.jankson")
    relocate("com.moandjiezana.toml", "${basePackage}.shadowed.com.moandjiezana.toml")

    configurations = [project.configurations.shadow]
    classifier "shadow"
}

jar {
    from("LICENSE")
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
}

def remapSourcesJar = tasks.getByName("remapSourcesJar")

publishing {
    publications {
        mavenJava(MavenPublication.class) {
            artifact(remapJar)
            artifact(sourcesJar) {
                builtBy(remapSourcesJar)
            }
        }
    }

    repositories {
        if (System.getenv("MAVEN_PASS") != null) {
            maven {
                url = "https://deploy.shedaniel.me/"
                credentials {
                    username = "shedaniel"
                    password = System.getenv("MAVEN_PASS")
                }
            }
        }
    }
}

curseforge {
    if (project.hasProperty("curse_api_key") || System.getenv("curse_api_key") != null) {
        apiKey = project.hasProperty("curse_api_key") ? project.property("curse_api_key") : System.getenv("curse_api_key")
        project {
            id = project.curseforge_id_fabric
            releaseType = "beta"
            addGameVersion "1.18"
            addGameVersion "1.18.1"
            addGameVersion "1.18.2"
            addGameVersion "1.18-Snapshot"
            addGameVersion "Java 17"
            addGameVersion "Fabric"
            mainArtifact(remapJar.archivePath) {
                displayName = "[Fabric $rootProject.supported_version] v$project.version"
            }
            afterEvaluate {
                uploadTask.dependsOn("build")
            }
        }
    }
    options {
        forgeGradleIntegration = false
        javaVersionAutoDetect = false
    }
}


